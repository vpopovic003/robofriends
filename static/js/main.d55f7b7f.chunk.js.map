{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","name","email","id","React","createElement","className","alt","src","concat","CardList","robots","map","user","i","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","_Component","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","state","hasError","_inherits","_createClass","value","error","info","setState","Component","App","onSearchChange","event","target","_this2","fetch","then","response","json","users","_this$state","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.d55f7b7f.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ name, email, id }) => {\n  return (\n    <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n      <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots}) => {\n  // in conjuction with ErrorBoundry. Throwing error on purpose.\n  // if (true) {\n  //   throw new Error('NO');\n  // }\n  return (\n    <div>\n      {\n        robots.map((user, i) => {\n          return ( \n            <Card \n              key={i} \n              id={robots[i].id} \n              name={robots[i].name} \n              email={robots[i].email}\n            />\n          );\n        })\n      }\n    </div>\n  );\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n  return (\n    <div className='p2'>\n      <input \n        className='pa3 ba b--green bg-lightest-blue'\n        type='search'\n        placeholder='search robots'\n        onChange={searchChange}\n      />\n    </div>\n  );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n  return (\n    <div style={{overflowY: 'scroll', border: '1px solid black', height: '800px'}}>\n      {props.children}; \n    </div>\n  )\n};\n\nexport default Scroll;","import React, { Component} from 'react';\n\nclass ErrorBoundry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    }\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true })  \n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1> Ooops. That is not good.</h1>\n    }\n    return this.props.children\n  }\n}\n\nexport default ErrorBoundry;","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll'\nimport ErrorBoundry from '../components/ErrorBoundry';\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      robots: [],\n      searchfield: ''\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ robots: users }));\n  }\n\n  onSearchChange = (event) => {\n    this.setState({ searchfield: event.target.value});\n  }\n\n  render () {\n    const { robots, searchfield } = this.state;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n    })\n    return !robots.length ?\n      <h1>Loading</h1> :\n      (\n        <div className='tc'>\n          <h1>RoboFriends</h1>\n          <SearchBox searchChange={this.onSearchChange} />\n          <Scroll>\n            <ErrorBoundry>\n              <CardList robots={filteredRobots} />\n            </ErrorBoundry>\n          </Scroll>\n          \n        </div>\n      );\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <App />\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}